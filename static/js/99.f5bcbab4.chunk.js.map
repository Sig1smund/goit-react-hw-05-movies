{"version":3,"file":"static/js/99.f5bcbab4.chunk.js","mappings":"6KAEMA,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAmB,mCAAG,oGACDD,EAAAA,EAAAA,IAAA,sCAAyCD,IADxC,cAClBG,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,qDAKnBC,EAAkB,mCAAG,WAAOC,GAAP,uFACAL,EAAAA,EAAAA,IAAA,iBAAoBK,EAAQC,SAA5B,oBAAgDP,EAAhD,oBADA,cACjBG,EADiB,yBAEhBA,EAASC,MAFO,2CAAH,sDAKlBI,EAAgB,mCAAG,WAAOC,GAAP,uFACER,EAAAA,EAAAA,IAAA,gCAAmCD,EAAnC,iCAA+DS,EAA/D,gCADF,cACfN,EADe,yBAEdA,EAASC,MAFK,2CAAH,sDAKhBM,EAAc,mCAAG,WAAOJ,GAAP,uFACIL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,4BAA+CN,EAA/C,oBADJ,cACbG,EADa,yBAEZA,EAASC,MAFG,2CAAH,sDAKdO,EAAiB,mCAAG,WAAOL,GAAP,uFACCL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,4BAA+CN,EAA/C,oBADD,cAChBG,EADgB,yBAEfA,EAASC,MAFM,2CAAH,sDAKhBQ,EAAM,CACTV,oBAAAA,EACAG,mBAAAA,EACAG,iBAAAA,EACAE,eAAAA,EACAC,kBAAAA,GAGJ,K,0GCtCA,EAAuB,mBAAvB,EAAiD,mBAAjD,EAA0E,kB,SCM3D,SAASE,IACpB,IAAQN,GAAaO,EAAAA,EAAAA,MAAbP,SACR,GAAwBQ,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KASA,OAPAC,EAAAA,EAAAA,YAAU,WACNN,EAAAA,EAAAA,eAAmBL,GAAUY,MAAK,SAAAf,GAC9Ba,EAAQb,EAAKY,KAChB,GACJ,GAAE,CAACT,KAIA,8BACCS,IACO,eAAII,UAAWC,EAAf,SACCL,EAAKM,KAAI,SAAAC,GAAK,OACX,gBAAmBH,UAAWC,EAA9B,WACI,gBAAKD,UAAWC,EAAOG,IACnBD,EAAME,aAAN,yCACoCF,EAAME,cArBnD,8EAwBSC,IAAI,SACJC,MAAO,OAEX,wBAAKJ,EAAMK,QACX,wCAAgBL,EAAMM,eAVjBN,EAAMO,GADJ,OAoB9B,C","sources":["fetch/fetch.jsx","webpack://goit-react-hw-05-movies/./src/pages/Cast/cast.module.css?3847","pages/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '339fdf0f312ec016e88b23cac1f5716a'\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst fetchTrendingMovies = async () => {\n    const response = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n    return response.data;\n};\n\nconst fetchMoviesDetails = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId.moviesId}?api_key=${KEY}&language=en-US`);\n    return response.data\n}\n\nconst fetchSearchMovie = async (searchQuery) => {\n    const response = await axios.get(`/search/movie?api_key=${KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`)\n    return response.data\n}\n\nconst fetchMovieCast = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/credits?api_key=${KEY}&language=en-US`)\n    return response.data\n}\n\nconst fetchMovieReviews = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`)\n    return response.data\n}\n\n const API = {\n    fetchTrendingMovies,\n    fetchMoviesDetails,\n    fetchSearchMovie,\n    fetchMovieCast,\n    fetchMovieReviews,\n };\n\nexport default API;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"cast_list__BjE1s\",\"item\":\"cast_item__rFGCo\",\"img\":\"cast_img__ABSva\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport API from 'fetch/fetch';\nimport s from './cast.module.css'\n\nconst defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700'\n\nexport default function Cast (){\n    const { moviesId } = useParams();\n    const [cast, setCast] = useState();\n\n    useEffect(() => {\n        API.fetchMovieCast(moviesId).then(data => {\n            setCast(data.cast)\n        })\n    }, [moviesId])\n \n\n    return (\n        <>\n        {cast && (\n                <ul className={s.list}>\n                {cast.map(actor => (\n                    <li key={actor.id} className={s.item}> \n                        <img className={s.img} src={\n                            actor.profile_path\n                            ? `https://image.tmdb.org/t/p/w342${actor.profile_path}`\n                            : defaultImg\n                        }\n                            alt='poster'\n                            width={250}\n                        />\n                        <h3>{actor.name}</h3>\n                        <h4>Character: {actor.character}</h4>\n                    </li>\n                ))}\n            </ul>\n        )}\n        \n        </>\n\n    )\n}"],"names":["KEY","axios","fetchTrendingMovies","response","data","fetchMoviesDetails","movieId","moviesId","fetchSearchMovie","searchQuery","fetchMovieCast","fetchMovieReviews","API","Cast","useParams","useState","cast","setCast","useEffect","then","className","s","map","actor","src","profile_path","alt","width","name","character","id"],"sourceRoot":""}