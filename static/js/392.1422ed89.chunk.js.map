{"version":3,"file":"static/js/392.1422ed89.chunk.js","mappings":"2NACA,EAAuB,mBAAvB,EAAiD,mBAAjD,EAA0E,kB,SCM3D,SAASA,IACpB,IAAQC,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAAwBE,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KASA,OAPAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,EAAAA,eAAmBN,GAAUO,MAAK,SAAAC,GAC9BJ,EAAQI,EAAKL,KAChB,GACJ,GAAE,CAACH,KAIA,8BACCG,IACO,eAAIM,UAAWC,EAAf,SACCP,EAAKQ,KAAI,SAAAC,GAAK,OACX,gBAAmBH,UAAWC,EAA9B,WACI,gBAAKD,UAAWC,EAAOG,IACnBD,EAAME,aAAN,yCACoCF,EAAME,cArBnD,8EAwBSC,IAAI,SACJC,MAAO,OAEX,wBAAKJ,EAAMK,QACX,wCAAgBL,EAAMM,eAVjBN,EAAMO,GADJ,OAoB9B,C,8DCxCKC,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAmB,mCAAG,oGACDD,EAAAA,EAAAA,IAAA,sCAAyCD,IADxC,cAClBG,EADkB,yBAEjBA,EAASf,MAFQ,2CAAH,qDAKnBgB,EAAkB,mCAAG,WAAOC,GAAP,uFACAJ,EAAAA,EAAAA,IAAA,iBAAoBI,EAAQzB,SAA5B,oBAAgDoB,EAAhD,oBADA,cACjBG,EADiB,yBAEhBA,EAASf,MAFO,2CAAH,sDAKlBkB,EAAgB,mCAAG,WAAOC,GAAP,uFACEN,EAAAA,EAAAA,IAAA,gCAAmCD,EAAnC,iCAA+DO,EAA/D,gCADF,cACfJ,EADe,yBAEdA,EAASf,MAFK,2CAAH,sDAKhBoB,EAAc,mCAAG,WAAOH,GAAP,uFACIJ,EAAAA,EAAAA,IAAA,iBAAoBI,EAApB,4BAA+CL,EAA/C,oBADJ,cACbG,EADa,yBAEZA,EAASf,MAFG,2CAAH,sDAKdqB,EAAiB,mCAAG,WAAOJ,GAAP,uFACCJ,EAAAA,EAAAA,IAAA,iBAAoBI,EAApB,4BAA+CL,EAA/C,oBADD,cAChBG,EADgB,yBAEfA,EAASf,MAFM,2CAAH,sDAKhBF,EAAM,CACTgB,oBAAAA,EACAE,mBAAAA,EACAE,iBAAAA,EACAE,eAAAA,EACAC,kBAAAA,GAGJ,K","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/cast.module.css?8374","components/Cast/Cast.jsx","fetch/fetch.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"cast_list__bULim\",\"item\":\"cast_item__AMMjV\",\"img\":\"cast_img__cPU03\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport API from 'fetch/fetch';\nimport s from './cast.module.css'\n\nconst defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700'\n\nexport default function Cast() {\n    const { moviesId } = useParams();\n    const [cast, setCast] = useState();\n\n    useEffect(() => {\n        API.fetchMovieCast(moviesId).then(data => {\n            setCast(data.cast)\n        })\n    }, [moviesId]);\n \n\n    return (\n        <>\n        {cast && (\n                <ul className={s.list}>\n                {cast.map(actor => (\n                    <li key={actor.id} className={s.item}> \n                        <img className={s.img} src={\n                            actor.profile_path\n                            ? `https://image.tmdb.org/t/p/w342${actor.profile_path}`\n                            : defaultImg\n                        }\n                            alt='poster'\n                            width={250}\n                        />\n                        <h3>{actor.name}</h3>\n                        <h4>Character: {actor.character}</h4>\n                    </li>\n                ))}\n            </ul>\n        )}\n        \n        </>\n\n    )\n}","import axios from 'axios';\n\nconst KEY = '339fdf0f312ec016e88b23cac1f5716a'\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst fetchTrendingMovies = async () => {\n    const response = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n    return response.data;\n};\n\nconst fetchMoviesDetails = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId.moviesId}?api_key=${KEY}&language=en-US`);\n    return response.data\n}\n\nconst fetchSearchMovie = async (searchQuery) => {\n    const response = await axios.get(`/search/movie?api_key=${KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`)\n    return response.data\n}\n\nconst fetchMovieCast = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/credits?api_key=${KEY}&language=en-US`)\n    return response.data\n}\n\nconst fetchMovieReviews = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`)\n    return response.data\n}\n\n const API = {\n    fetchTrendingMovies,\n    fetchMoviesDetails,\n    fetchSearchMovie,\n    fetchMovieCast,\n    fetchMovieReviews,\n };\n\nexport default API;"],"names":["Cast","moviesId","useParams","useState","cast","setCast","useEffect","API","then","data","className","s","map","actor","src","profile_path","alt","width","name","character","id","KEY","axios","fetchTrendingMovies","response","fetchMoviesDetails","movieId","fetchSearchMovie","searchQuery","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}