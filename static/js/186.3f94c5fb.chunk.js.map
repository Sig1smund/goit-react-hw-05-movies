{"version":3,"file":"static/js/186.3f94c5fb.chunk.js","mappings":"6OAIe,SAASA,IACpB,IAAQC,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KASA,OAPAC,EAAAA,EAAAA,YAAU,WACDL,GAGLM,EAAAA,EAAAA,kBAAsBN,GAAUO,MAAK,SAAAC,GAAI,OAAIJ,GAAW,OAAII,EAAKC,SAAxB,GAC5C,GAAE,CAACT,IAEmB,IAAnBG,EAAQO,QACD,qEAIP,8BACCP,IACG,wBACKA,EAAQQ,KAAI,SAAAC,GAAM,OACf,2BACI,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFNF,EAAOG,GADD,OAUlC,C,8DC/BKC,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAmB,mCAAG,oGACDD,EAAAA,EAAAA,IAAA,sCAAyCD,IADxC,cAClBG,EADkB,yBAEjBA,EAASX,MAFQ,2CAAH,qDAKnBY,EAAkB,mCAAG,WAAOC,GAAP,uFACAJ,EAAAA,EAAAA,IAAA,iBAAoBI,EAAQrB,SAA5B,oBAAgDgB,EAAhD,oBADA,cACjBG,EADiB,yBAEhBA,EAASX,MAFO,2CAAH,sDAKlBc,EAAgB,mCAAG,WAAOC,GAAP,uFACEN,EAAAA,EAAAA,IAAA,gCAAmCD,EAAnC,iCAA+DO,EAA/D,gCADF,cACfJ,EADe,yBAEdA,EAASX,MAFK,2CAAH,sDAKhBgB,EAAc,mCAAG,WAAOH,GAAP,uFACIJ,EAAAA,EAAAA,IAAA,iBAAoBI,EAApB,4BAA+CL,EAA/C,oBADJ,cACbG,EADa,yBAEZA,EAASX,MAFG,2CAAH,sDAKdiB,EAAiB,mCAAG,WAAOJ,GAAP,uFACCJ,EAAAA,EAAAA,IAAA,iBAAoBI,EAApB,4BAA+CL,EAA/C,oBADD,cAChBG,EADgB,yBAEfA,EAASX,MAFM,2CAAH,sDAKhBF,EAAM,CACTY,oBAAAA,EACAE,mBAAAA,EACAE,iBAAAA,EACAE,eAAAA,EACAC,kBAAAA,GAGJ,K","sources":["components/Reviews/Reviews.jsx","fetch/fetch.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport API from 'fetch/fetch';\n\nexport default function Reviews(){\n    const { moviesId } = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        if (!moviesId) {\n            return;\n        }\n        API.fetchMovieReviews(moviesId).then(data => setReviews([...data.results]))\n    }, [moviesId]);\n\n    if (reviews.length === 0) {\n        return <p>We don't have any reviews for this movie</p>;\n    }\n\n    return (\n        <>\n        {reviews && (\n            <ul>\n                {reviews.map(review => (\n                    <li key={review.id} >\n                        <h3>Author: {review.author}</h3>\n                        <p>{review.content}</p>\n                    </li>\n                ))}\n            </ul>\n        )}\n        </>\n    )\n}","import axios from 'axios';\n\nconst KEY = '339fdf0f312ec016e88b23cac1f5716a'\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst fetchTrendingMovies = async () => {\n    const response = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n    return response.data;\n};\n\nconst fetchMoviesDetails = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId.moviesId}?api_key=${KEY}&language=en-US`);\n    return response.data\n}\n\nconst fetchSearchMovie = async (searchQuery) => {\n    const response = await axios.get(`/search/movie?api_key=${KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`)\n    return response.data\n}\n\nconst fetchMovieCast = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/credits?api_key=${KEY}&language=en-US`)\n    return response.data\n}\n\nconst fetchMovieReviews = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`)\n    return response.data\n}\n\n const API = {\n    fetchTrendingMovies,\n    fetchMoviesDetails,\n    fetchSearchMovie,\n    fetchMovieCast,\n    fetchMovieReviews,\n };\n\nexport default API;"],"names":["Reviews","moviesId","useParams","useState","reviews","setReviews","useEffect","API","then","data","results","length","map","review","author","content","id","KEY","axios","fetchTrendingMovies","response","fetchMoviesDetails","movieId","fetchSearchMovie","searchQuery","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}